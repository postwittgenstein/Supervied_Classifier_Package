data <- read.xlsx("./NBc/Data/KNN_Sample_Data.xlsx")
library(xlsx)
library(openxlsx)
library(XLConnect)
library(XLConnectJars)
library(plyr)
data <- read.xlsx("./NBc/Data/KNN_Sample_Data.xlsx")
data <- read.xlsx("./NBc/Data/NB_Sample_Data.xlsx")
data
x <- read.xlsx("./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
x
source("./NBc_Core.R")
x
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
# -----------------------------------------------------------------------------------------------------------------------
#
#
#
#   Author          :    Youssef Sbai Idrissi
#   Maintainer      :    Youssef Sbai Idrissi
#   Github          :    https://github.com/postwittgenstein
#   Description     :    This is the Naive Bayesian Classifier algorithm. I prefered to let it open than to wrap
#                        it into a package. You're free to use it and to share it. Enjoy !
#   Specification   :    The data in your data set should be set in the orde below :
#
#                           Name      Age       ...       Classe
#                           1         0         ...       sport
#                           0         1         ...       politique
#
#                        " Classe " must EXIST and be the LAST one in range for all the xlsx files.
#                        And it may contain as much categories as you like ( in the unclassified excel it should be blank)
#                        All the data MUST be either " 0 "  or " 1 ", except for the "Classe"
#                        I didn't wrote the code that export the data to the excel file. It is the
#                        same from the ID3_Core code.
#
#
#
#   NOTE            :    This page is set as an example of use.
#                        1 ) Import the source as :
#                            > source("./NBc_Launch.R)
#                        2 ) Call the function, by giving in agument the source of Data to analyse :
#                            > ID3(input = "./ID3/Data/Health_DataMining_Sample_Data.xlsx")
#
#
#   Data Sample     :    If you've extracted the file from my git source, you'll find a set of
#                        sample data we've used in the class of DataMining. Here is the path :
#
#                         "./ID3/Data/Weather_DataMining_Sample_Data.xlsx"
#                         "./ID3/Data/Health_DataMining_Sample_Data.xlsx")
#                         "./ID3/Data/TD_DataMining_Sample_Data.xlsx")
#
#
#
# -----------------------------------------------------------------------------------------------------------------------
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx"
assign('data', read.xlsx(classified_data_path))
data
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx"
assign('x', read.xlsx(unclassfied_data_path))
x
source("./NBc_Core.R")
x
# -----------------------------------------------------------------------------------------------------------------------
#
#
#
#   Author          :    Youssef Sbai Idrissi
#   Maintainer      :    Youssef Sbai Idrissi
#   Github          :    https://github.com/postwittgenstein
#   Description     :    This is the Naive Bayesian Classifier algorithm. I prefered to let it open than to wrap
#                        it into a package. You're free to use it and to share it. Enjoy !
#   Specification   :    The data in your data set should be set in the orde below :
#
#                           Name      Age       ...       Classe
#                           1         0         ...       sport
#                           0         1         ...       politique
#
#                        " Classe " must EXIST and be the LAST one in range for all the xlsx files.
#                        And it may contain as much categories as you like ( in the unclassified excel it should be blank)
#                        All the data MUST be either " 0 "  or " 1 ", except for the "Classe"
#                        I didn't wrote the code that export the data to the excel file. It is the
#                        same from the ID3_Core code.
#
#
#
#   NOTE            :    This page is set as an example of use.
#                        1 ) Import the source as :
#                            > source("./NBc_Launch.R)
#                        2 ) Call the function, by giving in agument the source of Data to analyse :
#                            > ID3(input = "./ID3/Data/Health_DataMining_Sample_Data.xlsx")
#
#
#   Data Sample     :    If you've extracted the file from my git source, you'll find a set of
#                        sample data we've used in the class of DataMining. Here is the path :
#
#                         "./ID3/Data/Weather_DataMining_Sample_Data.xlsx"
#                         "./ID3/Data/Health_DataMining_Sample_Data.xlsx")
#                         "./ID3/Data/TD_DataMining_Sample_Data.xlsx")
#
#
#
# -----------------------------------------------------------------------------------------------------------------------
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
source("./NBc_Launch.R")
classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx"
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx"
assign('data', read.xlsx(classified_data_path))
assign('x', read.xlsx(unclassfied_data_path))
source("./NBc_Core.R")
x
nrow(x)
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx"
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx"
assign('data', read.xlsx(classified_data_path))
assign('x', read.xlsx(unclassfied_data_path))
library(xlsx)
library(openxlsx)
library(XLConnect)
library(XLConnectJars)
library(plyr)
options(java.parameters = "- Xmx1024m")
Px_result <- vector()
major_result <- vector()
test <- vector()
for( p__ in 1:nrow(x))
{
Elite <- 0
class_table <- table(data['Classe'])
for(k in 1:length(class_table))
{
P_x_ci <- 1
table_xi <- data[data['Classe']==names(class_table[k]),]
for( i in 1:(length(data)-1))
{
P_x_ci <- P_x_ci * ( length(which(table_xi[i] == x[[i]][[p__]])) / class_table[[k]] )
test <- c(test, length(which(table_xi[i] == x[[i]])) / class_table[[k]] )
}
P_x_ci <- P_x_ci * (table(data['Classe'])/nrow(data))[[k]]
test <- c(test, (table(data['Classe'])/nrow(data))[[k]])
Px_result[names(class_table[k])] <- P_x_ci
}
if(!all(Px_result==Px_result[1]))
{
index <- which.max(Px_result)
major_result[names(Px_result[index])] <- max(Px_result)
}else
{
nam <- paste('Cannot Decide - ', p__, sep = "")
major_result[nam] <- -1
}
x[['Classe']][p__] <- names(major_result[p__])
}
# Get the whole data from the major_result
# Check the X table and you'll see the new corrected data
# write it down to an xlsx file, i'm tired to do it.
x
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
x
data
classified_data_path
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
x
source("./NBc_Launch.R")
NBc(classified_data_path = "./NBc/Data/NB_Sample_Data.xlsx",
unclassfied_data_path = "./NBc/Data/NB_Sample_Unclassfied_Data.xlsx")
x
